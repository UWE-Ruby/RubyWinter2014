
Please Read Chapters 23 and 24 DuckTyping and MetaProgramming

Questions:
1. What is method_missing and how can it be used?

When Ruby can't find a called method in the object's class, superclass, etc., it calls method_missing, a method that raises an exception (either a NoMethodError or a NameError depending on the circumstances). Method_missing can be used to intercept every use of an undefined method and handle it. It can also intercept all calls, but it handles only some of them. 

2. What is a Eigenclass and what is it used for? Where Do Singleton methods live?

A eigenclass is an anonymous class (also known as a singleton class) located between an object and the object's original class that defines methods for a specific object. Singleton methods live within the eigenclass/singleton class.

3. When would you use DuckTyping? How would you use it to improve your code?

With DuckTyping, an object's type is defined by its behavior (i.e. what it can do) and not its class. In other words, if quacks like a duck, walks like a duck, and looks like a duck, it's a duck regardless of what its class really is. I'd use DuckTyping for when I wanted to avoid type-related errors, improve garbage collection, and increase my productivity by writing less code. Using DuckTyping would allow me to avoid testing a class in order to determine its type. Without the check, the method I'm working with will be more felxible, and I could pass it to an array, a string, a file, or any other object that appends using <<, and it would just work. 

4. What is the difference between a class method and an instance method? What is the difference between instance_eval and class_eval?

Class methods are methods that are called on a class. Instance methods, on the other hand, are methods that are called on an instance of a class. Class_eval and instance_eval differ in the way they set up the environment for method definition. Class_eval sets things up as if you were in the body of a class definition, so method definitions will define instance methods. Instance_eval, on the other hand, acts as if you were working inside the singleton class of self. Any methods you define will become class methods.

5. What is the difference between a singleton class and a singleton method?

A singleton method is a method that belongs to a single object. A singleton class is a class which defines a single object.

