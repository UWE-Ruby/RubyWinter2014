Please Read: 
 - Chapter 6 Standard Types
 - Review Blocks
 - Chapter 7 Regular Expressions
 - Chapter 22 The Ruby Language: basic types (symbols), variables and constants

<<<<<<< HEAD
1. What is a symbol? Symbol objects represent names and some strings inside the Ruby interpreter. They are generated using the :name and :"string" literals syntax.

2. What is the difference between a symbol and a string? Symbols are immutable and strings are mutable. Mutable objects can be changed after assignment while immutable objects can only be overwritten.

3. What is a block and how do I call a block? a block is an unnamed method. Either {} or do end form blocks. Blocks can be called using the yield key word or nameing the block using &somename

4. How do I pass a block to a method? What is the method signature? You would use a method that takes a block like each then use a variable to hold whatever the block does in pipes foo.each {|n| dan.3}. The method signiture is the method name.

5. Where would you use regular expressions? When I need to match a pattern of characters.
=======
1. What is a symbol?
A symbol is a static name or identifier.

2. What is the difference between a symbol and a string?
A string is a collection of characters whereas a symbol is a static identifier. A string is not static no matter what the contents of the string are. So the strings "hello" and "hello" are two different objects, whereas the symbol :hello and :hello are the exact same object. If you think of 1 as a FixNum or fixed number, you can think of the symbol :hello as the "FixStr" or fixed string :hello.

3. What is a block and how do I call a block?
A block is an anonymous function, or some code snipt that you can define and then call at a later time. To call a block you can use the yield keyword.

4. How do I pass a block to a method? What is the method signature?
To pass a block to a method you define the block after the method call with either the curly bracket enclosure {} or the do/end syntax. An example of passing a block to the each method of an array:

my_array.each {|a| puts a}

Any method in Ruby can take a block. You can explicitly add a block to a method by putting an ampersand & before the variable name in the method definition. An example of this would be:

def my_method(&my_block)
  my_block.call
end

5. Where would you use regular expressions?
Regular expressions are used for pattern matching and replacement with strings. An example would be if I wanted to write a syntax checker for some text that checked if each sentence ended with a period, started with a space and then a capital letter. 
>>>>>>> 9438bd77063c16f253d2a0b3692ccf1a278f3a40
